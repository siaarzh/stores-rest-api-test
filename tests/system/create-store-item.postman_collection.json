{
	"info": {
		"_postman_id": "f069175d-0e0d-4a0c-a590-268bac34d801",
		"name": "User create and store item",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/stores empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e78f7c82-2aa4-44c6-af88-4433c23115a0",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"List of stores returned\"] = jsonData.stores.isEmpty();",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/stores",
					"host": [
						"{{url}}"
					],
					"path": [
						"stores"
					]
				},
				"description": "this should return a list of stores, each in a JSON format."
			},
			"response": []
		},
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2312c350-4edb-4b93-b392-bf026d179223",
						"exec": [
							"pm.environment.unset(\"jwt_token\")",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"User created successfully\"] = jsonData.message === 'User created successfully.';",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"disabled": true
					},
					{
						"key": "Host",
						"value": "storesapi"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"serzhan3\",\n\t\"password\": \"password\"\n}"
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				},
				"description": "Register a new user"
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "344e9f07-98b0-4aee-8d51-ef65b5fbe0b6",
						"exec": [
							"// new Postman format",
							"var jsonData = pm.response.json();",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"JWT token exist\"] = jsonData.access_token !== undefined;",
							"",
							"pm.environment.set(\"jwt_token\", jsonData.access_token);",
							"",
							"// old Postman format",
							"// var jsonData = JSON.parse(responseBody)",
							"// postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"serzhan3\",\n\t\"password\": \"password\"\n}"
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				},
				"description": "Authenticate Bob"
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35ac6ca4-3e67-4209-baee-61a6d7355ce1",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Store name returned\"] = jsonData.name === 'books';",
							"tests[\"Store id returned\"] = jsonData.id === 1;",
							"tests[\"Store items are an empty list\"] = jsonData.items.length === 0;",
							"",
							"tests[\"Successful POST request\"] = responseCode.code === 201;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';",
							"",
							"postman.setEnvironmentVariable(\"store_id\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"price\": 10.99\n}"
				},
				"url": {
					"raw": "{{url}}/store/books",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"books"
					]
				},
				"description": "sets a price for a specific item"
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1ab1f3e-df15-4a5a-b7fc-d60158652336",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Item name returned\"] = jsonData.name === 'alice';",
							"tests[\"Item price returned\"] = jsonData.price === 19.99;",
							"",
							"tests[\"Successful POST request\"] = responseCode.code === 201;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"price\": 19.99,\n\t\"store_id\": {{store_id}}\n}"
				},
				"url": {
					"raw": "{{url}}/item/alice",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"alice"
					]
				},
				"description": "sets a price for a specific item"
			},
			"response": []
		},
		{
			"name": "/stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e78f7c82-2aa4-44c6-af88-4433c23115a0",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Store 'books' returned\"] = jsonData.stores[0].name === 'books';",
							"tests[\"ID of 'books' store returned\"] = jsonData.stores[0].id === parseInt(environment.store_id);",
							"tests[\"Item 'alice' name is returned in 'books' store\"] = jsonData.stores[0].items[0].name === 'alice';",
							"tests[\"Item 'alice' price is returned in 'books' store\"] = jsonData.stores[0].items[0].price === 19.99;",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/stores",
					"host": [
						"{{url}}"
					],
					"path": [
						"stores"
					]
				},
				"description": "this should return a list of stores, each in a JSON format."
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "624706a7-2600-47c9-9c62-3878341e6de8",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Message returned\"] = jsonData.message === 'Item deleted';",
							"",
							"tests[\"Success code\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/item/alice",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"alice"
					]
				},
				"description": "deletes an item uniquely identified by <name>"
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a513de85-7ff7-43b1-8f94-83e7a33cd404",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Message returned\"] = jsonData.message === 'Store deleted';",
							"",
							"tests[\"Success code\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader(\"Content-Type\") === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/store/books",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"books"
					]
				},
				"description": "deletes a store uniquely identified by <name>"
			},
			"response": []
		}
	]
}